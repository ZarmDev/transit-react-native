import { View, Animated, PanResponder, StyleSheet, Dimensions } from 'react-native';
import MapView, { Polyline, Marker } from 'react-native-maps';
import React, { useState, useEffect, useRef } from 'react';
import ServiceAlerts from '@/components/ServiceAlerts';
import * as FileSystem from 'expo-file-system';

// example data - will be overrided
var trainLines = [
  { coordinates: [{ latitude: 37.78825, longitude: -122.4324 }, { latitude: 37.75825, longitude: -122.4424 }], color: '#FF0000' },
];

var trainStops = [
  { latitude: 40.709166, longitude: -74.004901, title: 'New York City' }
];

async function getLineAndStopCoords() {
  // var data = null;
  // try {
  //   data = await FileSystem.readAsStringAsync(fileUri);
  // } catch (error) {
  //   console.error('Error reading file:', error);
  //   return false
  // }
  var data = `1..N03R,0,40.702068,-74.013664
1..N03R,1,40.703199,-74.014792
1..N03R,2,40.703226,-74.014820
1..N03R,3,40.703253,-74.014846
1..N03R,4,40.703280,-74.014870
1..N03R,5,40.703307,-74.014893
1..N03R,6,40.703335,-74.014914
1..N03R,7,40.703363,-74.014933
1..N03R,8,40.703391,-74.014952
1..N03R,9,40.703419,-74.014968
1..N03R,10,40.703448,-74.014983
1..N03R,11,40.703477,-74.014997
1..N03R,12,40.703506,-74.015009
1..N03R,13,40.703536,-74.015019
1..N03R,14,40.703566,-74.015028
1..N03R,15,40.703596,-74.015035
1..N03R,16,40.703625,-74.015041
1..N03R,17,40.704168,-74.015122
1..N03R,18,40.704194,-74.015125
1..N03R,19,40.704221,-74.015126
1..N03R,20,40.704247,-74.015127
1..N03R,21,40.704274,-74.015127
1..N03R,22,40.704300,-74.015125
1..N03R,23,40.704327,-74.015123
1..N03R,24,40.704354,-74.015119
1..N03R,25,40.704380,-74.015115
1..N03R,26,40.704407,-74.015109
1..N03R,27,40.704434,-74.015102
1..N03R,28,40.704461,-74.015094
1..N03R,29,40.704487,-74.015086
1..N03R,30,40.704514,-74.015076
1..N03R,31,40.704541,-74.015065
1..N03R,32,40.704568,-74.015052
1..N03R,33,40.705092,-74.014830
1..N03R,34,40.707513,-74.013783
1..N03R,35,40.708242,-74.013471
1..N03R,36,40.710132,-74.012648
1..N03R,37,40.710500,-74.012529
1..N03R,38,40.711112,-74.012375
1..N03R,39,40.711565,-74.012259
1..N03R,40,40.711835,-74.012188
1..N03R,41,40.712105,-74.012108
1..N03R,42,40.712154,-74.012094
1..N03R,43,40.712203,-74.012076
1..N03R,44,40.712252,-74.012057
1..N03R,45,40.712300,-74.012035
1..N03R,46,40.712348,-74.012012
1..N03R,47,40.712394,-74.011986
1..N03R,48,40.712440,-74.011959
1..N03R,49,40.712486,-74.011929
1..N03R,50,40.712530,-74.011897
1..N03R,51,40.712574,-74.011864
1..N03R,52,40.712618,-74.011828
1..N03R,53,40.712660,-74.011791
1..N03R,54,40.712702,-74.011751
1..N03R,55,40.712743,-74.011710
1..N03R,56,40.712783,-74.011667
1..N03R,57,40.713212,-74.011138
1..N03R,58,40.713229,-74.011116
1..N03R,59,40.713246,-74.011094
1..N03R,60,40.713263,-74.011073
1..N03R,61,40.713280,-74.011052
1..N03R,62,40.713298,-74.011032
1..N03R,63,40.713315,-74.011011
1..N03R,64,40.713333,-74.010992
1..N03R,65,40.713351,-74.010972
1..N03R,66,40.713369,-74.010953
1..N03R,67,40.713388,-74.010935
1..N03R,68,40.713406,-74.010917
1..N03R,69,40.713425,-74.010899
1..N03R,70,40.713444,-74.010882
1..N03R,71,40.713463,-74.010865
1..N03R,72,40.713482,-74.010848
1..N03R,73,40.713841,-74.010573
1..N03R,74,40.713961,-74.010473
1..N03R,75,40.714303,-74.010188
1..N03R,76,40.715437,-74.009299
1..N03R,77,40.715478,-74.009266
1..N03R,78,40.718032,-74.007249
1..N03R,79,40.718063,-74.007227
1..N03R,80,40.718095,-74.007206
1..N03R,81,40.718127,-74.007186
1..N03R,82,40.718160,-74.007167
1..N03R,83,40.718193,-74.007150
1..N03R,84,40.718228,-74.007133
1..N03R,85,40.718262,-74.007117
1..N03R,86,40.718298,-74.007103
1..N03R,87,40.718334,-74.007089
1..N03R,88,40.718370,-74.007077
1..N03R,89,40.718408,-74.007066
1..N03R,90,40.718446,-74.007055
1..N03R,91,40.718484,-74.007046
1..N03R,92,40.718523,-74.007038
1..N03R,93,40.718563,-74.007031
1..N03R,94,40.719318,-74.006886
1..N03R,95,40.722854,-74.006277
1..N03R,96,40.728251,-74.005367
1..N03R,97,40.728935,-74.005260
1..N03R,98,40.729169,-74.005221
1..N03R,99,40.729283,-74.005197
1..N03R,100,40.729414,-74.005160
1..N03R,101,40.729532,-74.005112
1..N03R,102,40.729642,-74.005062
1..N03R,103,40.729881,-74.004935
1..N03R,104,40.730321,-74.004682
1..N03R,105,40.733422,-74.002906
1..N03R,106,40.735973,-74.001452
1..N03R,107,40.736162,-74.001345
1..N03R,108,40.736358,-74.001229
1..N03R,109,40.736585,-74.001089
1..N03R,110,40.736761,-74.000973
1..N03R,111,40.737826,-74.000201
1..N03R,112,40.741040,-73.997871
1..N03R,113,40.744081,-73.995657
1..N03R,114,40.747215,-73.993365
1..N03R,115,40.750373,-73.991057
1..N03R,116,40.755290,-73.987495
1..N03R,117,40.757342,-73.986009
1..N03R,118,40.757638,-73.985786
1..N03R,119,40.757758,-73.985709
1..N03R,120,40.757880,-73.985638
1..N03R,121,40.758014,-73.985569
1..N03R,122,40.758156,-73.985512
1..N03R,123,40.758375,-73.985421
1..N03R,124,40.758631,-73.985330
1..N03R,125,40.759405,-73.985063
1..N03R,126,40.759714,-73.984959
1..N03R,127,40.760017,-73.984841
1..N03R,128,40.760283,-73.984725
1..N03R,129,40.760592,-73.984577
1..N03R,130,40.760821,-73.984444
1..N03R,131,40.761040,-73.984294
1..N03R,132,40.761728,-73.983849
1..N03R,133,40.762486,-73.983358
1..N03R,134,40.762980,-73.983038
1..N03R,135,40.763412,-73.982793
1..N03R,136,40.763714,-73.982626
1..N03R,137,40.764029,-73.982464
1..N03R,138,40.764386,-73.982320
1..N03R,139,40.764821,-73.982156
1..N03R,140,40.765125,-73.982063
1..N03R,141,40.765461,-73.981977
1..N03R,142,40.765808,-73.981910
1..N03R,143,40.766808,-73.981755
1..N03R,144,40.767172,-73.981702
1..N03R,145,40.767324,-73.981689
1..N03R,146,40.767440,-73.981694
1..N03R,147,40.767561,-73.981697
1..N03R,148,40.767681,-73.981718
1..N03R,149,40.767778,-73.981745
1..N03R,150,40.767895,-73.981781
1..N03R,151,40.768247,-73.981929
1..N03R,152,40.768454,-73.982012
1..N03R,153,40.768582,-73.982053
1..N03R,154,40.768695,-73.982078
1..N03R,155,40.768794,-73.982088
1..N03R,156,40.769222,-73.982098
1..N03R,157,40.773440,-73.982209
1..N03R,158,40.774166,-73.982212
1..N03R,159,40.777496,-73.982091
1..N03R,160,40.777869,-73.982058
1..N03R,161,40.778211,-73.982008
1..N03R,162,40.778453,-73.981970
1..N03R,163,40.778822,-73.981906
1..N03R,164,40.779426,-73.981757
1..N03R,165,40.780996,-73.981314
1..N03R,166,40.782155,-73.980924
1..N03R,167,40.782374,-73.980847
1..N03R,168,40.782622,-73.980748
1..N03R,169,40.782794,-73.980664
1..N03R,170,40.782970,-73.980572
1..N03R,171,40.783149,-73.980473
1..N03R,172,40.783313,-73.980371
1..N03R,173,40.783934,-73.979917
1..N03R,174,40.786953,-73.977656
1..N03R,175,40.787601,-73.977107
1..N03R,176,40.788644,-73.976218
1..N03R,177,40.788957,-73.975942
1..N03R,178,40.793919,-73.972323
1..N03R,179,40.794005,-73.972265
1..N03R,180,40.798506,-73.968980
1..N03R,181,40.798570,-73.968931
1..N03R,182,40.798635,-73.968882
1..N03R,183,40.798699,-73.968835
1..N03R,184,40.798763,-73.968789
1..N03R,185,40.798827,-73.968745
1..N03R,186,40.798890,-73.968702
1..N03R,187,40.798954,-73.968660
1..N03R,188,40.799016,-73.968620
1..N03R,189,40.799079,-73.968582
1..N03R,190,40.799141,-73.968544
1..N03R,191,40.799203,-73.968509
1..N03R,192,40.799264,-73.968474
1..N03R,193,40.799326,-73.968441
1..N03R,194,40.799386,-73.968410
1..N03R,195,40.799446,-73.968379
1..N03R,196,40.799772,-73.968210
1..N03R,197,40.800124,-73.968082
1..N03R,198,40.800510,-73.967980
1..N03R,199,40.800870,-73.967929
1..N03R,200,40.801984,-73.967832
1..N03R,201,40.802298,-73.967789
1..N03R,202,40.802605,-73.967719
1..N03R,203,40.802781,-73.967649
1..N03R,204,40.802929,-73.967582
1..N03R,205,40.803121,-73.967465
1..N03R,206,40.803324,-73.967313
1..N03R,207,40.803967,-73.966847
1..N03R,208,40.807722,-73.964110
1..N03R,209,40.815581,-73.958372
1..N03R,210,40.822008,-73.953676
1..N03R,211,40.826551,-73.950360
1..N03R,212,40.834041,-73.944890
1..N03R,213,40.840556,-73.940133
1..N03R,214,40.849505,-73.933596
1..N03R,215,40.855225,-73.929412
1..N03R,216,40.860531,-73.925536
1..N03R,217,40.861000,-73.925190
1..N03R,218,40.861102,-73.925109
1..N03R,219,40.861204,-73.925016
1..N03R,220,40.861303,-73.924914
1..N03R,221,40.861396,-73.924807
1..N03R,222,40.861516,-73.924645
1..N03R,223,40.861621,-73.924492
1..N03R,224,40.861712,-73.924333
1..N03R,225,40.861805,-73.924151
1..N03R,226,40.861888,-73.923966
1..N03R,227,40.863121,-73.920631
1..N03R,228,40.863239,-73.920305
1..N03R,229,40.863349,-73.920049
1..N03R,230,40.863451,-73.919867
1..N03R,231,40.863561,-73.919696
1..N03R,232,40.863669,-73.919565
1..N03R,233,40.863782,-73.919442
1..N03R,234,40.863950,-73.919309
1..N03R,235,40.864621,-73.918822
1..N03R,236,40.869444,-73.915279
1..N03R,237,40.870276,-73.914666
1..N03R,238,40.870986,-73.914141
1..N03R,239,40.871376,-73.913803
1..N03R,240,40.871758,-73.913415
1..N03R,241,40.872111,-73.913000
1..N03R,242,40.872766,-73.912201
1..N03R,243,40.874278,-73.910249
1..N03R,244,40.874561,-73.909831
1..N03R,245,40.874686,-73.909650
1..N03R,246,40.875276,-73.908878
1..N03R,247,40.875770,-73.908261
1..N03R,248,40.876002,-73.907950
1..N03R,249,40.876213,-73.907623
1..N03R,250,40.876388,-73.907296
1..N03R,251,40.876597,-73.906883
1..N03R,252,40.876765,-73.906585
1..N03R,253,40.876957,-73.906305
1..N03R,254,40.877176,-73.906061
1..N03R,255,40.877584,-73.905744
1..N03R,256,40.878856,-73.904834
1..N03R,257,40.882525,-73.902223
1..N03R,258,40.882988,-73.901899
1..N03R,259,40.883467,-73.901602
1..N03R,260,40.884461,-73.900991
1..N03R,261,40.884667,-73.900870
1..N03R,262,40.884928,-73.900730
1..N03R,263,40.886309,-73.900041
1..N03R,264,40.887195,-73.899616
1..N03R,265,40.889248,-73.898583
1..N03X001,0,40.702068,-74.013664
1..N03X001,1,40.703199,-74.014792
1..N03X001,2,40.703226,-74.014820
1..N03X001,3,40.703253,-74.014846
1..N03X001,4,40.703280,-74.014870
1..N03X001,5,40.703307,-74.014893
1..N03X001,6,40.703335,-74.014914
1..N03X001,7,40.703363,-74.014933
1..N03X001,8,40.703391,-74.014952
1..N03X001,9,40.703419,-74.014968
1..N03X001,10,40.703448,-74.014983
1..N03X001,11,40.703477,-74.014997
1..N03X001,12,40.703506,-74.015009
1..N03X001,13,40.703536,-74.015019
1..N03X001,14,40.703566,-74.015028
1..N03X001,15,40.703596,-74.015035
1..N03X001,16,40.703625,-74.015041
1..N03X001,17,40.704168,-74.015122
1..N03X001,18,40.704194,-74.015125
1..N03X001,19,40.704221,-74.015126
1..N03X001,20,40.704247,-74.015127
1..N03X001,21,40.704274,-74.015127
1..N03X001,22,40.704300,-74.015125
1..N03X001,23,40.704327,-74.015123
1..N03X001,24,40.704354,-74.015119
1..N03X001,25,40.704380,-74.015115
1..N03X001,26,40.704407,-74.015109
1..N03X001,27,40.704434,-74.015102
1..N03X001,28,40.704461,-74.015094
1..N03X001,29,40.704487,-74.015086
1..N03X001,30,40.704514,-74.015076
1..N03X001,31,40.704541,-74.015065
1..N03X001,32,40.704568,-74.015052
1..N03X001,33,40.705092,-74.014830
1..N03X001,34,40.707513,-74.013783
1..N03X001,35,40.708242,-74.013471
1..N03X001,36,40.710132,-74.012648
1..N03X001,37,40.710500,-74.012529
1..N03X001,38,40.711112,-74.012375
1..N03X001,39,40.711565,-74.012259
1..N03X001,40,40.711835,-74.012188
1..N03X001,41,40.712105,-74.012108
1..N03X001,42,40.712154,-74.012094
1..N03X001,43,40.712203,-74.012076
1..N03X001,44,40.712252,-74.012057
1..N03X001,45,40.712300,-74.012035
1..N03X001,46,40.712348,-74.012012
1..N03X001,47,40.712394,-74.011986
1..N03X001,48,40.712440,-74.011959
1..N03X001,49,40.712486,-74.011929
1..N03X001,50,40.712530,-74.011897
1..N03X001,51,40.712574,-74.011864
1..N03X001,52,40.712618,-74.011828
1..N03X001,53,40.712660,-74.011791
1..N03X001,54,40.712702,-74.011751
1..N03X001,55,40.712743,-74.011710
1..N03X001,56,40.712783,-74.011667`
  var splitByLine = data.split('\n');
  for (var i = 0; i < splitByLine.length; i += 1) {
    var splitByComma = splitByLine[i].split(',')
    var splitByComma2 = splitByLine[i + 1].split(',')
    trainLines.push({
      coordinates: [
        { latitude: parseFloat(splitByComma[2]), longitude: parseFloat(splitByComma[3]) },
        { latitude: parseFloat(splitByComma2[2]), longitude: parseFloat(splitByComma2[3]) }
      ],
      color: '#FF0000'
    })
  }
}

getLineAndStopCoords()


// heavy use of AI
function DraggableContainer(props: any) {
  // Suggested by AI - good to keep in mind.
  // const position = useRef(new Animated.ValueXY()).current;
  const [removeAlerts, setRemoveAlerts] = useState(false);
  // Drag gestures
  const panResponder = useRef(
    PanResponder.create({
      onStartShouldSetPanResponder: () => true,
      onPanResponderMove: (evt, gestureState) => {
        // Calculate the new Y position
        let newG = gestureState.dy;
        let newY = evt.nativeEvent.pageY;

        // if the mouse y is near the height of the screen - the current height of the container
        var collisionArea = props.height;
        const range = 100;
        // console.log(newY > collisionArea - range, newY < collisionArea + range)
        if (!(newY > collisionArea - range && newY < collisionArea + range)) {
          return false
        }

        // Prevent container from going too far off
        let max = 100;
        if (newY < max) {
          newY = max;
        }

        let min = 800;
        if (newY > min) {
          newY = min;
        }

        setRemoveAlerts(true)

        // console.log(newY, 'newY ', newG, 'newG')
        // position.setValue({ x: 0, y: newG - 35});
        // newY -= 40;
        props.setHeight(Dimensions.get('window').height - newY)
      },
      onPanResponderRelease: () => {
        // empty... (when mouse released)
        setRemoveAlerts(false)
      },
    })
  ).current;

  return (
    <View>
      <Animated.View
        style={[
          styles.draggableContainer,
          {
            height: props.height,
            // transform: [{ translateY: position.y }],
          },
        ]}
        {...panResponder.panHandlers}
      >
        {removeAlerts ? <></> : <ServiceAlerts></ServiceAlerts>}
      </Animated.View>
    </View>
  );
};

export default function App() {
  const [draggableHeight, setDraggableHeight] = useState(Dimensions.get('window').height * 0.5);
  const [mapHeight, setMapHeight] = useState(Dimensions.get('window').height * 0.5);

  useEffect(() => {
    setMapHeight(Dimensions.get('window').height - draggableHeight);
    // console.log(mapHeight + draggableHeight, 'test')
    // console.log(draggableHeight, 'dh')
    // console.log(Dimensions.get('window').height, 'total')
  }, [draggableHeight]);

  function handleTapOutsideView() {
    // console.log(draggableHeight, 'dh')
    setDraggableHeight(Dimensions.get('window').height * 0.2)
  }

  return (
    <View>
      <MapView style={{ height: mapHeight }}
        initialRegion={
          {
            latitude: 40.709166,
            longitude: -74.004901,
            // what is delta??!
            latitudeDelta: 0.0922,
            longitudeDelta: 0.0421
          }
        }
        onPress={handleTapOutsideView}>
        {trainLines.map((line, index) => (
          <Polyline key={index} coordinates={line.coordinates} strokeColor={line.color} strokeWidth={6} />
        ))}
        {trainStops.map((stop, index) => (
          <Marker key={index} coordinate={{ latitude: stop.latitude, longitude: stop.longitude }} title={stop.title} />
        ))}
      </MapView>
      <DraggableContainer height={draggableHeight} setHeight={setDraggableHeight}></DraggableContainer>
    </View>
  );
}

const styles = StyleSheet.create({
  // container: {
  //   flex: 1
  // },
  draggableContainer: {
    width: '100%',
    backgroundColor: 'skyblue',
    borderRadius: 10,
  },
});
